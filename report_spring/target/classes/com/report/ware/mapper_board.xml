<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--==================================================-->
<!-- mapper 태그선언 -->
<!--==================================================-->
<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다 -->
<!--==================================================-->
<mapper namespace="com.report.ware.BoardDAO">
<sql id="boardWhere">
			where 1=1
			<if test="(keyword1 != null and keyword1.length()>0) or (keyword2 != null and keyword2.length()>0)">
				 and(
			</if>
			<if test="keyword1 != null and keyword1.length()>0">
				(
				 upper(subject) like upper('%${keyword1}%')  
				 or upper(writer) like upper('%${keyword1}%')  
				 or upper(to_char(reg_date, 'YYYY-MM-DD AM HH:MI:SS')) like upper('%${keyword1}%')  
				 or upper(content) like upper('%${keyword1}%')  
				 or upper(email) like upper('%${keyword1}%')  
				 )
			</if>
			<if test="(keyword1 != null and keyword1.length()>0) and (keyword2 != null and keyword2.length()>0)">
				${or_and}
			</if>
			<if test="keyword2 != null and keyword2.length()>0">
				(
				 upper(subject) like upper('%${keyword2}%')  
				 or upper(writer) like upper('%${keyword2}%')  
				 or upper(to_char(reg_date, 'YYYY-MM-DD AM HH:MI:SS')) like upper('%${keyword2}%')  
				 or upper(content) like upper('%${keyword2}%')  
				 or upper(email) like upper('%${keyword2}%')  
				 )
			</if>
			<if test="(keyword1 != null and keyword1.length()>0) or (keyword2 != null and keyword2.length()>0)">
				  )
			</if>
			<if test="date != null">
				 and (
				 <!--============================================-->
				 <!-- [mybatis foreach 반복문] 의 속성 설명 -->
				 <!-- collection="배열/List 객체의 변수명" -->
				 <!-- item="배열객체 또는 List 객체안의 데이터를 저장할 지역변수명" -->
				 <!-- index="반복문에서 사용할 인덱스 번호 저장 변수명" -->
				 <!--============================================-->
				 <foreach collection="date" item="date" index="i">
				 	<if test="i > 0">
						 or 
				 	</if>
				 	<if test="date.equals('오늘')">
						 to_char(sysdate,'YYYYMMDD')=to_char(reg_date,'YYYYMMDD') 
				 	</if>
				 	<if test="date.equals('어제')">
						 to_char(sysdate-1,'YYYYMMDD')=to_char(reg_date,'YYYYMMDD') 
				 	</if>
				 </foreach>
			 )
			</if>
</sql>
<!--==================================================-->
<!-- 게시판 글 출력 번호 수정하는 update 문을 내포한 update 태그선언(댓글입력시 순서번호 +1) -->
<!-- parameterType="이 쿼리에 참여할 자료형" // (parameterType과 자료형이 서로 맞아야함) -->
<!-- BoardDTO 안의 데이터를 꺼내 쓰는 법 => #{} or ${} -->
<!-- # => 속성변수의 자료형 유지(String 이면 '' 자동으로 붙여줌) -->
<!-- $ => 자료형을 살리지 않고 그대로 쿼리에 넣음 -->
<!-- # 을쓰냐 $ 를쓰냐 => 쿼리를 보고 상황에 맞게 => 예를들어 오라클에서 b_no 자료형은 int 이므로 String으로 들어가면안됨 => ${b_no} -->
<!-- b_no => FM은 int or 숫자문자 인데 실무에서는 편의상 String으로 그냥 쓰는경우가 많음 => #{b_no} 이정도형변환은 오라클이 알아서해줌 -->
<!-- 만약 String 글자문자가 들어왔을 때 $로 꺼내면 에러 -->
<!-- resultType 리턴값은 자동으로 int => resultType select 에만 지정해줌 -->
<!-- ""는 오라클 에서 alias 테이블이름 감쌀 때 사용. '' 는 문자열 감쌀 때 사용 -->
<!-- alias 를 "" 로 감싸지 않아도 된다 => 단 공백이 없어야함 -->
<!--==================================================-->
<update id="updatePrint_no" parameterType="com.report.ware.BoardDTO">
	update board
	set print_no = print_no + 1
	where group_no = (select group_no from board where b_no=${b_no})
		and print_no > (select print_no from board where b_no=${b_no})
</update>
<!--==================================================-->
<!-- 게시판 기본 정보 입력하는 insert문을 내포한 insert 태그선언 -->
<!--==================================================-->
<!-- parameterType 속성은 안에 내장된 쿼리 호출하면서 넘겨줄 데이터의 자료형을 지정함 -->
<!-- insert 태그 안에는 resultType 속성이 없다. 리턴값은 자동으로 int 형이다 -->
<!-- insert, update, delete 태그도 동일하다 -->
<!--==================================================-->
	<insert id="insertBoard" parameterType="com.report.ware.BoardDTO">
		insert into board(
			b_no
			,subject
			,writer
			,readcount
			,content
			,email
			,group_no
			,print_no
			,print_level
		) values(
			(select nvl(max(b_no),0)+1 from board)
			,#{subject}
			,#{writer}
			,0
			,#{content}
			,#{email}
			<!--================================================================-->
			<!-- mybatis 조건문을 이용하여 만약에 자바의 BoardDTO 객체의 속성변수 b_no 가 null 또는 길이가 없으면 -->
			<!-- 즉 새글쓰기 모드이면 그룹번호를 자기 PK를, 출력순서 번호는 0, 들여쓰기 레벨은 0으로 입력하기-->
			<!--=========================================-->
			<!-- <주의> mybatis 조건문 형식 -->
			<!--=========================================-->
			<!--
				<if test="자바문법과 유사한 조건식">
					실행할 SQL 구문
				</if> 
				자바 문법과 유사한 조건식에서 or 또는 and 사용가능하다.
				자바 문법과 유사한 조건식에 투입되는 외부데이터는 절대 #{} 또는 ${} 로 감싸지 않고 그냥 쓴다
			 -->
			<!--================================================================-->
			<if test="b_no == null or b_no.length() == 0">
				,(select nvl(max(b_no),0)+1 from board)
				,0
				,0
			</if>
			<!--================================================================-->
			<!-- mybatis 조건문을 이용하여 만약에 자바의 BoardDTO 객체의 속성변수 b_no 가 null 이 아니고 길이가 있으면 -->
			<!-- 즉 댓글쓰기 모드이면 그룹번호를 엄마 PK번호로, 출력순서 번호는 엄마보다 1 큰걸로, 들여쓰기 레벨도 엄마보다 1 큰걸로 입력하기-->
			<!-- b_no 자료형은 number 이기 때문에 # => x , $ => o -->
			<!--================================================================-->
			<if test="b_no != null and b_no.length() > 0">
				,(select group_no from board where b_no = ${b_no})
				,(select print_no + 1 from board where b_no = ${b_no})
				,(select print_level + 1 from board where b_no = ${b_no})
			</if>
		)
	</insert>
	<!--================================================================-->
	<!-- 게시판 검색하는 select 문을 내포한 select 태그 선언 -->
	<!-- 게시판 목록 가져오기 -->
	<!--================================================================-->
	<select id="getBoardList" parameterType="com.report.ware.BoardSearchDTO" resultType="java.util.HashMap">
			select * from (select zzz.*, rownum RNUM from ( 
				select
					b_no || '' as "b_no"
					,subject as "subject"
					,writer as "writer"
					,to_char(reg_date,'YYYY-MM-DD') "reg_date"
					,to_char(reg_date,'YYYYMMDD HH24:MI:SS') AS "reg_date2"
					,to_char(sysdate,'YYYYMMDD HH24:MI:SS') AS "sysdate2"
					,readcount || '' as "readcount"
					,content as "content"
					,pwd as "pwd"
					,email as "email"
					,group_no || '' as "group_no"
					,print_no || '' as "print_no"
					,print_level || '' as "print_level"
				from board b
				<!--===========================================-->
				<!-- <sql id="boardWhere"> 태그 안에 삽입된 SQL 구문 삽입하기 -->
				<!--===========================================-->
				<include refid="boardWhere"></include>
				<!--===========================================-->
				<!-- xml 에서는 부등호를 태그로 인식함 -->
				<!-- <![CDATA[ ]]> 로 감싸면 xml 에서 부등호 사용 할 수 있게 해줌 -->
				<!--===========================================-->
				order by group_no desc, print_no asc
				 ) zzz) where <![CDATA[ RNUM >= ${selectPageNo * rowCntPerPage - rowCntPerPage +1} and RNUM <= ${selectPageNo * rowCntPerPage} ]]>
	</select>
	<!--================================================================-->
	<!-- 게시판 검색 총 행의 개수를 검색하는 select 문을 내포한 select 태그 선언 -->
	<!--================================================================-->
	<select id="getBoardListAllCnt" parameterType="com.report.ware.BoardSearchDTO" resultType="int">
			select 
				count(*) 
			from board b
			<!--===========================================-->
			<!-- <sql id="boardWhere"> 태그 안에 삽입된 SQL 구문 삽입하기 -->
			<!--===========================================-->
			<include refid="boardWhere"></include>
	</select>
	<!--================================================================-->
	<!-- 1개의 게시판 글 검색하는 select문을 내포한 select 태그 선언 -->
	<!-- 참고로 resultType은 select 에만 존재 -->
	<!--================================================================-->
	<!-- 만약 parameterType이 int, String, double 같이 한 개일 경우 -->
	<!-- SQL 구문안에서 표현하는 방법은 #{가독성있는이름} 또는 ${가독성있는이름} 이다. -->
	<!--================================================================-->
	<select id="getBoardDTO" parameterType="int" resultType="com.report.ware.BoardDTO">
		select
			b_no || ''		"b_no"
			,subject		"subject"
			,writer			"writer"
			,reg_date		"reg_date"
			,readcount		"readcount"
			,content		"content"
			,pwd			"pwd"
			,email			"email"
			,group_no		"group_no"
			,print_no		"print_no"
			,print_level	"print_level"
		from board
		where b_no=#{b_no}
	</select>
	<!--================================================================-->
	<!-- 게시판 1개 글 수정하는 update 문을 내포한 update 태그 선언 -->
	<!--================================================================-->
	<update id="updateReadcount" parameterType="int">
		update board
		set readcount = readcount + 1
		where b_no=#{b_no}
	</update>
	
	<select id="getBoardCnt" parameterType="com.report.ware.BoardDTO" resultType="int">
		select count(*) from board where b_no=${b_no}
	</select>
	
	<select id="getPwdCnt" parameterType="com.report.ware.BoardDTO" resultType="int">
		select count(*) from board where b_no=${b_no}
	</select>
	
	<update id="updateBoard" parameterType="int">
		UPDATE BOARD SET 
			SUBJECT = #{subject}
			, CONTENT = #{content}
			 WHERE B_NO = ${b_no}
	</update>
	
	<delete id="deleteBoard" parameterType="int">
		DELETE FROM BOARD WHERE B_NO=${b_no}
	</delete>
	
</mapper>